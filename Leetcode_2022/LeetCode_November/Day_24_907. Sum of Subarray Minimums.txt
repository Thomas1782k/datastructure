class Solution {
    public int sumSubarrayMins(int[] arr) {
        int n = arr.length;
        long res=0,mod = (int)1e9 + 7;
        int[] left = new int[n];
        int[] right = new int[n];
        Stackint[] st = new Stack();
        for(int i=0;in;i++) {
            int count=1;
            while(!st.isEmpty() &&  st.peek()[0]  arr[i])
                count+=st.pop()[1];
            st.push(new int[] { arr[i], count});
            left[i] = count;
        }
        st = new Stack();
        for(int i=n-1;i=0;i--) {
            int count=1;
            while(!st.isEmpty() && st.peek()[0] = arr[i])
                count+=st.pop()[1];
            st.push(new int[] { arr[i], count});
            right[i] = count;
        }
        for(int i=0;in;i++) {
            res = (res + (long)arr[i]left[i]right[i])%mod;
        }
        return (int)res;
    }
}